name: CI-Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:


build-backend:
  runs-on: ubuntu-latest

  services:
    mysql:
      image: mysql:8.0
      env:
        MYSQL_ROOT_PASSWORD: =Kv/MyBclvuWZt3B0bupIOEGf9yio0Ykviz5omr/QlfQ=  
        MYSQL_DATABASE: donnees  
      ports:
        - 3306:3306  
      options: --health-cmd="mysqladmin ping --silent" --health-start-period=30s --health-retries=3 --health-timeout=10s

  env:
    SKIP_TESTS: 'false'
    SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/donnees
    SPRING_DATASOURCE_USERNAME: root
    SPRING_DATASOURCE_PASSWORD: =Kv/MyBclvuWZt3B0bupIOEGf9yio0Ykviz5omr/QlfQ=
    SPRING_DATASOURCE_DRIVER-CLASS-NAME: com.mysql.cj.jdbc.Driver
    SPRING_PROFILES_ACTIVE: test

  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Cache Maven Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: maven-${{ hashFiles('backend/pom.xml') }}
        restore-keys: maven-

    - name: Build Backend
      working-directory: backend
      run: |
        mvn clean package -DskipTests=true
        mvn clean install -DskipTests=true

    - name: Run Backend Tests
      if: env.SKIP_TESTS != 'true'
      working-directory: backend
      run: mvn test

    - name: Build Backend Docker Image
      run: docker build -t meschebajordy/pmt-backend:v1 ./backend


  build-frontend:
          runs-on: ubuntu-latest
      
          env:
            SKIP_TESTS: 'false'
      
          steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
      
            - name: Cache Node Modules
              uses: actions/cache@v3
              with:
                path: frontend/node_modules
                key: npm-${{ hashFiles('frontend/package-lock.json') }}
                restore-keys: npm-
      
            - name: Install Dependencies
              working-directory: frontend
              run: 
                npm install
      
            - name: Build Frontend
              working-directory: frontend
              run: npm run build --configuration=production
      
            - name: Run Frontend Tests
              if: env.SKIP_TESTS != 'true'
              working-directory: frontend
              run: npm test -- --watch=false --browsers=ChromeHeadless
      
            - name: Build Frontend Docker Image
              run: docker build -t meschebajordy/pmt-frontend:v1 ./frontend

  push-docker-images:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Backend Image
        run: docker push meschebajordy/pmt-backend:v1

      - name: Push Frontend Image
        run: docker push meschebajordy/pmt-frontend:v1
