name: CI-pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:20.10.0
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Installation de Docker Compose
      - name: Install Docker Compose
        run: |  
          curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose  
          chmod +x /usr/local/bin/docker-compose  
          docker-compose --version

      # Build de l'image frontend
      - name: Build frontend image
        run: docker-compose -f docker-compose.yml build frontend

      # Tests frontend
      - name: Run frontend tests
        run: docker-compose run frontend npm run test -- --watch=false --browsers=ChromeHeadless

  build-backend:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:20.10.0
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Installation de Docker Compose
      - name: Install Docker Compose
        run: |  
          curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose  
          chmod +x /usr/local/bin/docker-compose  
          docker-compose --version

      # Build de l'image backend
      - name: Build backend image
        run: docker-compose -f docker-compose.yml build backend

      # Tests backend
      - name: Run backend tests
        run: docker-compose run backend mvn test

  deploy:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]  


    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push des images Docker
      - name: Push docker images
        run: docker-compose push
